services:
  bucstop:
    build:
      context: ./Bucstop WebApp/BucStop
      dockerfile: Dockerfile
    container_name: bucstop
    ports:
      - "8080:80"
    networks:
      - bucstop-network
    environment:
      - DOTNET_ENVIRONMENT=${env:-containersLocal}
      - GIT_COMMIT_HASH=${GIT_COMMIT:-unknown}
    depends_on:
      - api-gateway
    volumes:
      - snapshots-data:/app/Snapshots
      - logs-data:/app/Logs

  api-gateway:
    build:
      context: ./Team-3-BucStop_APIGateway/APIGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8081:80" # Expose API Gateway on IP:8081
    networks:
      - bucstop-network
    environment:
      - DOTNET_ENVIRONMENT=${env:-containersLocal}
    depends_on:
      - snake
      - pong
      - tetris

  snake:
    build:
      context: ./Team-3-BucStop_Snake/Snake
      dockerfile: Dockerfile
    container_name: game-snake
    environment:
      - DOTNET_ENVIRONMENT=${env:-containersLocal}
    ports:
      - "8082:80" # Expose Snake microservice on IP:8082
    networks:
      - bucstop-network

  pong:
    build:
      context: ./Team-3-BucStop_Pong/Pong
      dockerfile: Dockerfile
    container_name: game-pong
    environment:
      - DOTNET_ENVIRONMENT=${env:-containersLocal}
    ports:
      - "8083:80" # Expose Pong microservice on IP:8083
    networks:
      - bucstop-network

  tetris:
    build:
      context: ./Team-3-BucStop_Tetris/Tetris
      dockerfile: Dockerfile
    container_name: game-tetris
    environment:
      - DOTNET_ENVIRONMENT=${env:-containersLocal}
    ports:
      - "8084:80" # Expose Tetris microservice on IP:8084
    networks:
      - bucstop-network

  empty-service-test:
    build:
      context: ./Team-3-BucStop_Test/EmptyService
      dockerfile: Dockerfile
    container_name: empty-service-test
    # Intentionally not publishing ports to host to avoid conflicts.
    # To access the page from host, map a port like "8085:80" when needed.
    networks:
      - bucstop-network

networks:
  bucstop-network:
    driver: bridge

volumes:
  snapshots-data:
    driver: local
  logs-data:
    driver: local