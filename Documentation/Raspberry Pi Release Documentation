üîÅ Update Application on Raspberry Pi (New Release Workflow) 

1Ô∏è‚É£ Navigate to the App Directory 

cd /BucStop 
 

This is the folder where you originally cloned the repo. 

 

2Ô∏è‚É£ Pull the Latest Changes from GitHub 

git pull origin main 
 

Replace main with your default branch name if it's different (like master or dev). 

-we‚Äôre deploying from main currently but can implement a staging branch later  

 

3Ô∏è‚É£ Rebuild the Docker Image 

docker compose up 
 

This will build the image with the latest code. 

 

4Ô∏è‚É£ Restart the Container 

Option 1: Stop and Remove the Existing Container(s) 

docker stop my-container-name  
docker rm my-container-name  
 

Container names are: bucstop, api-gateway, game-tetris, game-snake, game-pong 

Option 2: Run a New Container with the Updated Image 

docker run -d --name my-container-name -p 80:80 my-app-name 
 

Use --restart unless-stopped again if you want automatic restart. 

Container names are up above, and app name is BucStop 

‚úÖ Optional: Use Tags or Versioning 

If you're using GitHub releases or tagging: 

git fetch --all 
git checkout tags/v1.2.3 -b release-v1.2.3 
 

Then follow the build and run steps again. 

 

üì¶ Optional: Automate the Process 

You can script this process or use a CI/CD pipeline (like GitHub Actions with SSH deployment) to auto-update your Raspberry Pi on each release ‚Äî let me know if you‚Äôd like help setting that up. 
