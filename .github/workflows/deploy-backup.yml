name: Deploy Pipeline

on:
  # Still supports your original flow, but only if the PR is from the same repo.
  pull_request:
    branches: [ main ]
    types: [ closed ]
  # Handy for testing backups/deploy without a PR.
  workflow_dispatch:

jobs:
  backup:
    # Run if: (1) manual dispatch, OR (2) PR merged AND not from a fork
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for workspace)
        uses: actions/checkout@v4

      - name: Assert required secrets exist (no values printed)
        run: |
          test -n "${{ secrets.SSH_HOST }}" || { echo "Missing secret: SSH_HOST"; exit 1; }
          test -n "${{ secrets.SSH_USER }}" || { echo "Missing secret: SSH_USER"; exit 1; }
          # Use either SSH_KEY or SSH_PASS; here we're using password as in your file
          test -n "${{ secrets.SSH_PASS }}" || { echo "Missing secret: SSH_PASS"; exit 1; }
          # Optional, but nice to have
          if [ -z "${{ secrets.SSH_PORT }}" ]; then echo "Note: SSH_PORT not set, defaulting to 22"; fi

      - name: Create backups on server (snapshots-data, logs-data)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            BACKUP_DIR="$HOME/bucstop_backups"
            TS="$(date +%F_%H%M%S)"
            mkdir -p "$BACKUP_DIR/$TS"

            # If your user needs sudo for docker, keep sudo; otherwise remove it.
            sudo docker run --rm -v snapshots-data:/data -v "$BACKUP_DIR/$TS":/backup busybox \
              sh -c 'tar czf /backup/snapshots.tar.gz -C /data . || (echo "snapshots-data missing?"; exit 1)'

            sudo docker run --rm -v logs-data:/data -v "$BACKUP_DIR/$TS":/backup busybox \
              sh -c 'tar czf /backup/logs.tar.gz -C /data . || (echo "logs-data missing?"; exit 1)'

            ln -sfn "$BACKUP_DIR/$TS" "$BACKUP_DIR/latest"
            echo "Backup complete at $BACKUP_DIR/$TS"

      - name: Download backups from server
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          # Use ~ instead of $HOME so the remote shell expands it
          source: "~/bucstop_backups/latest/*"
          target: "backups"
          overwrite: true
          strip_components: 0

      - name: Upload backup artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bucstop-backup-${{ github.run_id }}
          path: backups/
          retention-days: 30

  if_merged:
    needs: backup
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Assert container registry secrets exist
        run: |
          test -n "${{ secrets.DOCKERHUB_USERNAME }}" || { echo "Missing secret: DOCKERHUB_USERNAME"; exit 1; }
          test -n "${{ secrets.DOCKERHUB_TOKEN }}"    || { echo "Missing secret: DOCKERHUB_TOKEN"; exit 1; }

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./BucStop/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bucstop:latest

      - name: Run Deploy script on the server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            # OPTIONAL: pull latest infra repo on server if that's how you store scripts
            # cd /opt/bucstop && git pull --rebase

            # Use the actual absolute path of your script on the server:
            cd /home/${USER}/scripts
            chmod +x ./redeployBucstop.sh
            ./redeployBucstop.sh
