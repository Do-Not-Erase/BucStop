name: Deploy Pipeline

on:
  # Original behavior: run when a PR to main is closed (i.e., merged)
  pull_request:
    branches: [ main ]
    types: [ closed ]
  # Optional manual trigger for testing
  workflow_dispatch:

jobs:
  backup:
    # Run if: manual dispatch OR merged PR from the same repo (secrets available)
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for workspace)
        uses: actions/checkout@v4

      - name: Assert required SSH secrets exist
        run: |
          test -n "${{ secrets.PI_HOST }}"    || { echo "Missing secret: PI_HOST"; exit 1; }
          test -n "${{ secrets.PI_USER }}"    || { echo "Missing secret: PI_USER"; exit 1; }
          test -n "${{ secrets.PI_SSH_KEY }}" || { echo "Missing secret: PI_SSH_KEY"; exit 1; }

      - name: Create backups on server (snapshots-data, logs-data)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key:      ${{ secrets.PI_SSH_KEY }}
          # port:   ${{ secrets.PI_PORT }}   # optional; omit to default to 22
          script_stop: true
          script: |
            set -euo pipefail
            BACKUP_DIR="$HOME/bucstop_backups"
            TS="$(date +%F_%H%M%S)"
            mkdir -p "$BACKUP_DIR/$TS"

            # If the SSH user is not in the docker group, keep sudo; otherwise remove sudo
            sudo docker run --rm -v snapshots-data:/data -v "$BACKUP_DIR/$TS":/backup busybox \
              sh -c 'tar czf /backup/snapshots.tar.gz -C /data . || (echo "snapshots-data missing?"; exit 1)'

            sudo docker run --rm -v logs-data:/data -v "$BACKUP_DIR/$TS":/backup busybox \
              sh -c 'tar czf /backup/logs.tar.gz -C /data . || (echo "logs-data missing?"; exit 1)'

            ln -sfn "$BACKUP_DIR/$TS" "$BACKUP_DIR/latest"
            echo "Backup complete at $BACKUP_DIR/$TS"

      - name: Download backups from server
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key:      ${{ secrets.PI_SSH_KEY }}
          # port:   ${{ secrets.PI_PORT }}   # optional
          source: "~/bucstop_backups/latest/*"   # use ~ so the remote shell expands it
          target: "backups"
          overwrite: true
          strip_components: 0

      - name: Upload backup artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bucstop-backup-${{ github.run_id }}
          path: backups/
          retention-days: 30

  deploy:
    needs: backup
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      # If you push to Docker Hub, keep these; otherwise remove this block.
      - name: Assert Docker Hub secrets exist
        run: |
          test -n "${{ secrets.DOCKERHUB_USERNAME }}" || { echo "Missing secret: DOCKERHUB_USERNAME"; exit 1; }
          test -n "${{ secrets.DOCKERHUB_TOKEN }}"    || { echo "Missing secret: DOCKERHUB_TOKEN"; exit 1; }

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./BucStop/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bucstop:latest

      - name: Run deploy script on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key:      ${{ secrets.PI_SSH_KEY }}
          # port:   ${{ secrets.PI_PORT }}   # optional
          script_stop: true
          script: |
            set -euo pipefail
            cd ~/scripts   # <-- adjust if your script lives elsewhere
            chmod +x ./redeployBucstop.sh
            ./redeployBucstop.sh